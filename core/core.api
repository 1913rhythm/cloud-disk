service core-api {
	// 用户登录
	@handler UserLogin
	post /user/login(LoginRequest) returns (LoginReply)

	// 用户详情
	@handler UserDetail
	get /user/detail(UserDetailRequest) returns (UserDetailReply)

	// 发送验证码
	@handler MailCodeSendRegister
	post /mail/code/send/register(MailCodeRequest) returns (MailCodeReply)

	// 用户注册
	@handler UserRegister
	post /user/register(UserRegisterRequest) returns (UserRegisterReply)

	// 获取资源详情
	@handler ShareBasicDetail
	get /share/basic/detail(ShareBasicDetailRequest) returns (ShareBasicDetailReply)
}

// 用户登录后才能上传文件
@server (
	middleware :Auth
)
service core-api {
	// 文件上传
	@handler FileUpload
	post /file/upload(FileUploadRequest) returns (FileUploadReply)

	// 用户文件的关联存储
	@handler UserRepositorySave
	post /user/repository/save(UserRepositorySaveRequest) returns (UserRepositorySaveReply)

	// 用户-文件列表
	@handler UserFileList
	get /user/file/list(UserFileListRequest) returns (UserFileListReply)

	// 用户-文件名称修改
	@handler UserFileNameUpdate
	post /user/file/name/update(UserFileNameUpdateRequest) returns (UserFileNameUpdateReply)

	// 用户-文件夹创建
	@handler UserFolderCreate
	get /user/folder/create(UserFolderCreateRequest) returns (UserFolderCreateReply)

	// 用户-文件删除
	@handler UserFileDelete
	delete /user/file/delete(UserFileDeleteRequest) returns (UserFileDeleteReply)

	// 用户-文件移动
	@handler UserFileMove
	put /user/file/move(UserFileMoveRequest) returns (UserFileMoveReply)

	// 创建分享记录
	@handler ShareBasicCreate
	post /share/basic/create(ShareBasicCreateRequest) returns (ShareBasicCreateReply)

	// 资源保存
	@handler ShareBasicSave
	post /share/basic/save(ShareBasicSaveRequest) returns (ShareBasicSaveReply)

	// 刷新 Authorization
	@handler RefreshAuthorization
	post /refresh/authorization(RefreshAuthorizationRequest) returns (RefreshAuthorizationReply)

	// 文件上传前基本信息处理
	@handler FileUploadPrepare
	post /file/upload/prepare(FileUploadPrepareRequest) returns (FileUploadPrepareReply)

	// 文件分片上传
	@handler FileUploadChunk
	post /file/upload/chunk(FileUploadChunkRequest) returns (FileUploadChunkReply)

	// 文件分片上传
	@handler FileUploadChunkComplete
	post /file/upload/chunk/complete(FileUploadChunkCompleteRequest) returns (FileUploadChunkCompleteReply)

}

type RefreshAuthorizationRequest {
}

type RefreshAuthorizationReply {
	Token        string `json:"authorization"`
	RefreshToken string `json:"refresh_token"`
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginReply {
	Token        string `json:"authorization"`
	RefreshToken string `json:"refresh_token"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailReply {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeRequest {
	Email string `json:"email"`
}

type MailCodeReply {
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterReply {
}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadReply {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type FileUploadPrepareRequest {
	Md5  string `json:"md5"` // 用来判断文件是否存在
	Name string `json:"name"`
	Ext  string `json:"ext"`
}

type FileUploadPrepareReply {
	Identity string `json:"identity"`  // 文件在数据库中存在时，返回repository_pool.identity
	UploadId string `json:"upload_id"` // 文件在数据库中不存在时，调用分片上传
	Key      string `json:"key"`
}

type FileUploadChunkRequest { // formdata
	// key
	// upload_id
	// part_number
}

type FileUploadChunkReply {
	Etag string `json:"etag"` // 文件的md5值
}

type FileUploadChunkCompleteRequest {
	Key        string      `json:"key"`
	UploadId   string      `json:"upload_id"`
	CosObjects []CosObject `json:"cos_objects"`
}

type CosObject {
	PartNumber int    `json:"part_number"`
	Etag       string `json:"etag"`
}

type FileUploadChunkCompleteReply {
}

type UserRepositorySaveRequest {
	ParentId           int64  `json:"parent_id"`
	RepositoryIdentity string `json:"repository_identity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositorySaveReply {
	Identity string `json:"identity"`
}

type UserFileListRequest {
	Id   int64 `json:"id,optional"`
	Page int   `json:"page,optional"`
	Size int   `json:"size,optional"`
}

type UserFileListReply {
	List  []*UserFile `json:"list,optional"`
	Count int64       `json:"count"`
}

type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
}

type UserFileNameUpdateRequest {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}

type UserFileNameUpdateReply{}

type UserFolderCreateRequest {
	ParentId int64  `json:"parent_id"`
	Name     string `json:"name"`
}

type UserFolderCreateReply {
	Identity string `json:"identity"`
}

type UserFileDeleteRequest {
	Identity string `json:"identity"`
}

type UserFileDeleteReply{}

type UserFileMoveRequest {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parent_identity"`
}

type UserFileMoveReply{}

type ShareBasicCreateRequest {
	UserRepositoryIdentity string `json:"user_repository_identity"`
	ExpiredTime            int    `json:"expired_time"`
}

type ShareBasicCreateReply {
	Identity string `json:"identity"`
}

type ShareBasicDetailRequest {
	Identity string `json:"identity"`
}

type ShareBasicDetailReply {
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int64  `json:"size"`
	Path               string `json:"path"`
}

type ShareBasicSaveRequest {
	RepositoryIdentity string `json:"repository_identity"`
	ParentId           int64  `json:"parent_id"`
}

type ShareBasicSaveReply {
	Identity string `json:"identity"`
}